{"remainingRequest":"C:\\Users\\Wang\\Desktop\\polyhedron\\litemall-master\\litemall-master\\litemall-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Wang\\Desktop\\polyhedron\\litemall-master\\litemall-master\\litemall-vue\\src\\views\\order\\tabbar-cart.vue?vue&type=style&index=0&id=68c1c044&lang=scss&scoped=true","dependencies":[{"path":"C:\\Users\\Wang\\Desktop\\polyhedron\\litemall-master\\litemall-master\\litemall-vue\\src\\views\\order\\tabbar-cart.vue","mtime":1703663878000},{"path":"C:\\Users\\Wang\\Desktop\\polyhedron\\litemall-master\\litemall-master\\litemall-vue\\node_modules\\css-loader\\index.js","mtime":1737137197319},{"path":"C:\\Users\\Wang\\Desktop\\polyhedron\\litemall-master\\litemall-master\\litemall-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1737137197255},{"path":"C:\\Users\\Wang\\Desktop\\polyhedron\\litemall-master\\litemall-master\\litemall-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1737137198226},{"path":"C:\\Users\\Wang\\Desktop\\polyhedron\\litemall-master\\litemall-master\\litemall-vue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1737137197662},{"path":"C:\\Users\\Wang\\Desktop\\polyhedron\\litemall-master\\litemall-master\\litemall-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1737137198017},{"path":"C:\\Users\\Wang\\Desktop\\polyhedron\\litemall-master\\litemall-master\\litemall-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1737137194839}],"contextDependencies":[],"result":["\n@import '../../assets/scss/mixin';\n\n.tab-cart {\n  padding-bottom: 50px;\n  box-sizing: border-box;\n}\n\n.editor_head {\n  @include one-border;\n  text-align: right;\n  padding: 10px;\n  font-size: $font-size-normal;\n  background-color: #fff;\n}\n\n.card-goods {\n  background-color: $bg-color;\n  .card-goods__item {\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n    background-color: #fff;\n  }\n  .cart_delete {\n    line-height: 100px;\n    padding: 0 10px;\n    color: #fff;\n    background-color: $red;\n  }\n  .card-goods__footer {\n    font-size: $font-size-normal;\n    color: $font-color-gray;\n  }\n}\n\n.clear_invalid {\n  width: 120px;\n  color: $font-color-gray;\n  border: 1px solid $font-color-gray;\n  margin: 0 auto;\n  text-align: center;\n  padding: 5px 3px;\n  margin-top: 20px;\n  border-radius: 3px;\n}\n",{"version":3,"sources":["tabbar-cart.vue"],"names":[],"mappings":";AAyNA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tabbar-cart.vue","sourceRoot":"src/views/order","sourcesContent":["<template>\n  <div class=\"tab-cart\">\n    <div class=\"editor_head\" v-show=\"goods.length\">\n      <van-icon :name=\"isEditor ? 'success' : 'editor'\"/>\n      <span @click=\"isEditor = !isEditor\">{{isEditor ? '完成' : '编辑'}}</span>\n    </div>\n    <van-checkbox-group @change=\"toggle\" class=\"card-goods\" v-model=\"checkedGoods\">\n      <div v-for=\"(item, i) in goods\" :key=\"i\" class=\"card-goods__item\">\n        <van-checkbox :key=\"item.id\" :name=\"item.id\" v-model=\"item.checked\"></van-checkbox>\n\n        <van-card :title=\"item.goodsName\" :price=\"item.price\" :num=\"item.number\" :thumb=\"item.picUrl\">\n          <div slot=\"desc\">\n            <div class=\"van-card__desc\">\n              <van-tag plain style=\"margin-right:6px;\" v-for=\"(spec, index) in item.specifications\" :key=\"index\">\n                {{spec}}\n              </van-tag>\n            </div>\n          </div>\n          <div slot=\"footer\" v-if=\"isEditor\">\n            <van-stepper v-model=\"item.number\" @change=\"stepperEvent(item,arguments)\" disableInput/>\n          </div>\n          <div slot=\"footer\" v-else>添加日期 {{item.addTime}}</div>\n        </van-card>\n\n        <div class=\"cart_delete\" v-if=\"isEditor\" @click=\"deleteCart(i)\">删除</div>\n      </div>\n    </van-checkbox-group>\n\n    <is-empty v-if=\"!goods.length\">您的购物车空空如也~</is-empty>\n\n    <van-submit-bar\n      style=\"bottom: 50px\"\n      :price=\"totalPrice\"\n      :disabled=\"!checkedGoods.length\"\n      :buttonText=\"submitBarText\"\n      :loading=\"isSubmit\"\n      label=\"总计\"\n      @submit=\"cartSubmit\"\n    >\n      <van-checkbox v-model=\"checkedAll\" @click=\"setCheckAll\" style=\"padding: 0 10px;\">全选</van-checkbox>\n    </van-submit-bar>\n  </div>\n</template>\n\n<script>\nimport { Checkbox, CheckboxGroup, Card, SubmitBar, Stepper, Tag } from 'vant';\nimport { cartList, cartUpdate, cartChecked, cartDelete} from '@/api/api';\nimport { setLocalStorage } from '@/utils/local-storage';\n\nimport isEmpty from '@/components/is-empty/';\nimport _ from 'lodash';\n\nexport default {\n  data() {\n    return {\n      isEditor: false,\n      checkedAll: false,\n      isSubmit: false,\n      checkedGoods: [],\n      allGoods: [],\n      goods: []\n    };\n  },\n  created() {\n    this.init();\n  },\n  computed: {\n    submitBarText() {\n      return this.isEditor ? '删除' : '结算';\n    },\n    totalPrice() {\n      return this.goods.reduce(\n        (total, item) =>\n          total +\n          (this.checkedGoods.indexOf(item.id) !== -1\n            ? item.price * item.number * 100\n            : 0),\n        0\n      );\n    }\n  },\n\n  methods: {\n    stepperEvent(item, arg) {\n      let number = arg[0];\n      cartUpdate({\n        number: number,\n        goodsId: item.goodsId,\n        id: item.id,\n        productId: item.productId\n      });\n    },\n    init() {\n      cartList().then(res => {\n        this.goods = res.data.data.cartList;\n        this.allGoods = this.getAllList();\n        this.checkedGoods = this.getCheckedList(this.goods);\n      });\n    },\n    getAllList() {\n      let result = [];\n      _.each(this.goods, v => {\n        result.push(v.id);\n      });\n      return result;\n    },\n    getCheckedList(goods) {\n      let result = [];\n      _.each(goods, v => {\n        if (v.checked) {\n          result.push(v.id);\n        }\n      });\n      return result;\n    },\n    cartSubmit(data) {\n      let productIds = [];\n      let checkedGoods = this.checkedGoods;\n      _.each(checkedGoods, id => {\n        productIds.push(\n          _.find(this.goods, vv => {\n            return id === vv.id;\n          }).productId\n        );\n      });\n      if (this.isEditor) {\n        this.$dialog\n          .confirm({\n            message: '确定删除所选商品吗?',\n            cancelButtonText: '再想想'\n          })\n          .then(() => {\n            this.deleteNext(productIds);\n          });\n      } else {\n        this.isSubmit = true;\n        setLocalStorage({AddressId: 0, CartId: 0, CouponId: 0});\n        this.$router.push('/order/checkout');\n      }\n    },\n    setCheckAll(val) {\n      if (this.checkedGoods.length === this.allGoods.length) {\n        this.checkedGoods = [];\n      } else {\n        this.checkedGoods = this.allGoods;\n      }\n    },\n    deleteCart(o) {\n      let productId = this.goods[o].productId;\n      this.$dialog\n        .confirm({ message: '确定删除所选商品吗', cancelButtonText: '再想想' })\n        .then(() => {\n          this.$nextTick(() => {\n            this.deleteNext(productId);\n          });\n        });\n    },\n    toggle(index) {\n      let addProductIds = [];\n      _.each(index, v => {\n        let productId = _.find(this.goods, result => {\n          return result.id === v;\n        }).productId;\n        addProductIds.push(productId);\n      });\n\n      let delProductIds = [];\n      _.each(_.difference(this.allGoods, index), v => {\n        let productId = _.find(this.goods, result => {\n          return result.id === v;\n        }).productId;\n        delProductIds.push(productId);\n      });\n      if (delProductIds.length > 0) {\n        cartChecked({productIds: delProductIds, isChecked: 0});\n      }\n      if (addProductIds.length > 0) {\n        cartChecked({productIds: addProductIds, isChecked: 1});\n      }\n\n      if(index.length === this.allGoods.length){\n        this.checkedAll = true\n      }\n      else{\n        this.checkedAll = false\n      }\n    },\n    deleteNext(o) {\n      let productIds = [];\n      if (o instanceof Array) {\n        productIds = o;\n      } else {\n        productIds.push(o);\n      }\n\n      cartDelete({productIds: productIds}).then(res => {\n        this.goods = res.data.data.cartList;\n        this.allGoods = this.getAllList();\n        this.checkedGoods = this.getCheckedList(this.goods);\n      });\n    }\n  },\n\n  components: {\n    [Card.name]: Card,\n    [Tag.name]: Tag,\n    [Stepper.name]: Stepper,\n    [isEmpty.name]: isEmpty,\n    [Checkbox.name]: Checkbox,\n    [SubmitBar.name]: SubmitBar,\n    [CheckboxGroup.name]: CheckboxGroup\n  }\n};\n</script>\n\n\n<style lang=\"scss\" scoped>\n@import '../../assets/scss/mixin';\n\n.tab-cart {\n  padding-bottom: 50px;\n  box-sizing: border-box;\n}\n\n.editor_head {\n  @include one-border;\n  text-align: right;\n  padding: 10px;\n  font-size: $font-size-normal;\n  background-color: #fff;\n}\n\n.card-goods {\n  background-color: $bg-color;\n  .card-goods__item {\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n    background-color: #fff;\n  }\n  .cart_delete {\n    line-height: 100px;\n    padding: 0 10px;\n    color: #fff;\n    background-color: $red;\n  }\n  .card-goods__footer {\n    font-size: $font-size-normal;\n    color: $font-color-gray;\n  }\n}\n\n.clear_invalid {\n  width: 120px;\n  color: $font-color-gray;\n  border: 1px solid $font-color-gray;\n  margin: 0 auto;\n  text-align: center;\n  padding: 5px 3px;\n  margin-top: 20px;\n  border-radius: 3px;\n}\n</style>\n"]}]}