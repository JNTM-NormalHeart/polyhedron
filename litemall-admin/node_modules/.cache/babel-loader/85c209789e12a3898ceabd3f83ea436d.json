{"remainingRequest":"C:\\Users\\Wang\\Desktop\\polyhedron\\litemall-master\\litemall-master\\litemall-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Wang\\Desktop\\polyhedron\\litemall-master\\litemall-master\\litemall-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Wang\\Desktop\\polyhedron\\litemall-master\\litemall-master\\litemall-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Wang\\Desktop\\polyhedron\\litemall-master\\litemall-master\\litemall-admin\\src\\views\\profile\\notice.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\Wang\\Desktop\\polyhedron\\litemall-master\\litemall-master\\litemall-admin\\src\\views\\profile\\notice.vue","mtime":1703663872000},{"path":"C:\\Users\\Wang\\Desktop\\polyhedron\\litemall-master\\litemall-master\\litemall-admin\\babel.config.js","mtime":1703663870000},{"path":"C:\\Users\\Wang\\Desktop\\polyhedron\\litemall-master\\litemall-master\\litemall-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Wang\\Desktop\\polyhedron\\litemall-master\\litemall-master\\litemall-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\Wang\\Desktop\\polyhedron\\litemall-master\\litemall-master\\litemall-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Wang\\Desktop\\polyhedron\\litemall-master\\litemall-master\\litemall-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCJDOi9Vc2Vycy9XYW5nL0Rlc2t0b3AvcG9seWhlZHJvbi9saXRlbWFsbC1tYXN0ZXIvbGl0ZW1hbGwtbWFzdGVyL2xpdGVtYWxsLWFkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcyIpLmRlZmF1bHQ7Ck9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyIpOwp2YXIgX3Byb2ZpbGUgPSByZXF1aXJlKCJAL2FwaS9wcm9maWxlIik7CnZhciBfUGFnaW5hdGlvbiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiQC9jb21wb25lbnRzL1BhZ2luYXRpb24iKSk7CnZhciBfbG9kYXNoID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJsb2Rhc2giKSk7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vIFNlY29uZGFyeSBwYWNrYWdlIGJhc2VkIG9uIGVsLXBhZ2luYXRpb24KdmFyIF9kZWZhdWx0ID0gZXhwb3J0cy5kZWZhdWx0ID0gewogIG5hbWU6ICdBZG1pbk5vdGljZScsCiAgY29tcG9uZW50czogewogICAgUGFnaW5hdGlvbjogX1BhZ2luYXRpb24uZGVmYXVsdAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxpc3Q6IFtdLAogICAgICB0b3RhbDogMCwKICAgICAgbGlzdExvYWRpbmc6IHRydWUsCiAgICAgIGxpc3RRdWVyeTogewogICAgICAgIHBhZ2U6IDEsCiAgICAgICAgbGltaXQ6IDIwLAogICAgICAgIHRpdGxlOiAnJywKICAgICAgICB0eXBlOiAndW5yZWFkJywKICAgICAgICBzb3J0OiAnYWRkX3RpbWUnLAogICAgICAgIG9yZGVyOiAnZGVzYycKICAgICAgfSwKICAgICAgbXVsdGlwbGVTZWxlY3Rpb246IFtdLAogICAgICBub3RpY2U6IHsKICAgICAgICB0aXRsZTogJycsCiAgICAgICAgc291cmNlOiAnJywKICAgICAgICBjb250ZW50OiAnJywKICAgICAgICBhZGRUaW1lOiAnJwogICAgICB9LAogICAgICBub3RpY2VWaXNpYmxlOiBmYWxzZQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldExpc3QoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldExpc3Q6IGZ1bmN0aW9uIGdldExpc3QoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICAgIHRoaXMubGlzdExvYWRpbmcgPSB0cnVlOwogICAgICAoMCwgX3Byb2ZpbGUubGlzdE5vdGljZSkodGhpcy5saXN0UXVlcnkpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMubGlzdCA9IHJlc3BvbnNlLmRhdGEuZGF0YS5saXN0OwogICAgICAgIF90aGlzLnRvdGFsID0gcmVzcG9uc2UuZGF0YS5kYXRhLnRvdGFsOwogICAgICAgIF90aGlzLmxpc3RMb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy5saXN0ID0gW107CiAgICAgICAgX3RoaXMudG90YWwgPSAwOwogICAgICAgIF90aGlzLmxpc3RMb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZUZpbHRlcjogZnVuY3Rpb24gaGFuZGxlRmlsdGVyKCkgewogICAgICB0aGlzLmxpc3RRdWVyeS5wYWdlID0gMTsKICAgICAgdGhpcy5nZXRMaXN0KCk7CiAgICB9LAogICAgaGFuZGxlRGVsZXRlOiBmdW5jdGlvbiBoYW5kbGVEZWxldGUocm93KSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwogICAgICAoMCwgX3Byb2ZpbGUucm1Ob3RpY2UpKHJvdykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpczIuJG5vdGlmeS5zdWNjZXNzKHsKICAgICAgICAgIHRpdGxlOiAn5oiQ5YqfJywKICAgICAgICAgIG1lc3NhZ2U6ICfliKDpmaTpgJrnn6XmiJDlip8nCiAgICAgICAgfSk7CiAgICAgICAgX3RoaXMyLmdldExpc3QoKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMyLiRub3RpZnkuZXJyb3IoewogICAgICAgICAgdGl0bGU6ICflpLHotKUnLAogICAgICAgICAgbWVzc2FnZTogcmVzcG9uc2UuZGF0YS5lcnJtc2cKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgaGFuZGxlU2VsZWN0aW9uQ2hhbmdlOiBmdW5jdGlvbiBoYW5kbGVTZWxlY3Rpb25DaGFuZ2UodmFsKSB7CiAgICAgIHRoaXMubXVsdGlwbGVTZWxlY3Rpb24gPSB2YWw7CiAgICB9LAogICAgaGFuZGxlQmF0Y2hEZWxldGU6IGZ1bmN0aW9uIGhhbmRsZUJhdGNoRGVsZXRlKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKICAgICAgaWYgKHRoaXMubXVsdGlwbGVTZWxlY3Rpb24ubGVuZ3RoID09PSAwKSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign6K+36YCJ5oup6Iez5bCR5LiA5p2h6K6w5b2VJyk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIHZhciBpZHMgPSBbXTsKICAgICAgX2xvZGFzaC5kZWZhdWx0LmZvckVhY2godGhpcy5tdWx0aXBsZVNlbGVjdGlvbiwgZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICBpZHMucHVzaChpdGVtLmlkKTsKICAgICAgfSk7CiAgICAgICgwLCBfcHJvZmlsZS5icm1Ob3RpY2UpKHsKICAgICAgICBpZHM6IGlkcwogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzMy4kbm90aWZ5LnN1Y2Nlc3MoewogICAgICAgICAgdGl0bGU6ICfmiJDlip8nLAogICAgICAgICAgbWVzc2FnZTogJ+aJuemHj+WIoOmZpOmAmuefpeaIkOWKnycKICAgICAgICB9KTsKICAgICAgICBfdGhpczMuZ2V0TGlzdCgpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpczMuJG5vdGlmeS5lcnJvcih7CiAgICAgICAgICB0aXRsZTogJ+Wksei0pScsCiAgICAgICAgICBtZXNzYWdlOiByZXNwb25zZS5kYXRhLmVycm1zZwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBoYW5kbGVSZWFkOiBmdW5jdGlvbiBoYW5kbGVSZWFkKHJvdykgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKICAgICAgKDAsIF9wcm9maWxlLmNhdE5vdGljZSkocm93KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzNC5ub3RpY2UgPSByZXNwb25zZS5kYXRhLmRhdGE7CiAgICAgICAgX3RoaXM0Lm5vdGljZVZpc2libGUgPSB0cnVlOwogICAgICB9KTsKICAgIH0sCiAgICBhZnRlclJlYWQ6IGZ1bmN0aW9uIGFmdGVyUmVhZCgpIHsKICAgICAgdGhpcy5ub3RpY2VWaXNpYmxlID0gZmFsc2U7CiAgICAgIHRoaXMuZ2V0TGlzdCgpOwogICAgfSwKICAgIGhhbmRsZUJhdGNoUmVhZDogZnVuY3Rpb24gaGFuZGxlQmF0Y2hSZWFkKCkgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKICAgICAgaWYgKHRoaXMubXVsdGlwbGVTZWxlY3Rpb24ubGVuZ3RoID09PSAwKSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign6K+36YCJ5oup6Iez5bCR5LiA5p2h6K6w5b2VJyk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIHZhciBpZHMgPSBbXTsKICAgICAgX2xvZGFzaC5kZWZhdWx0LmZvckVhY2godGhpcy5tdWx0aXBsZVNlbGVjdGlvbiwgZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICBpZHMucHVzaChpdGVtLmlkKTsKICAgICAgfSk7CiAgICAgICgwLCBfcHJvZmlsZS5iY2F0Tm90aWNlKSh7CiAgICAgICAgaWRzOiBpZHMKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpczUuJG5vdGlmeS5zdWNjZXNzKHsKICAgICAgICAgIHRpdGxlOiAn5oiQ5YqfJywKICAgICAgICAgIG1lc3NhZ2U6ICfmibnph4/orr7nva7pgJrnn6Xlt7Lor7vmiJDlip8nCiAgICAgICAgfSk7CiAgICAgICAgX3RoaXM1LmdldExpc3QoKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXM1LiRub3RpZnkuZXJyb3IoewogICAgICAgICAgdGl0bGU6ICflpLHotKUnLAogICAgICAgICAgbWVzc2FnZTogcmVzcG9uc2UuZGF0YS5lcnJtc2cKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["notice.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n\n    <!-- 查询和其他操作 -->\n    <div class=\"filter-container\">\n      <el-input v-model=\"listQuery.title\" clearable class=\"filter-item\" style=\"width: 200px;\" :placeholder=\"$t('profile_notice.placeholder.filter_title')\" />\n      <el-button class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\">{{ $t('app.button.search') }}</el-button>\n    </div>\n\n    <div class=\"operator-container\">\n      <el-button class=\"filter-item\" type=\"primary\" icon=\"el-icon-edit\" @click=\"handleBatchRead\">{{ $t('profile_notice.button.batch_read') }}</el-button>\n      <el-button class=\"filter-item\" type=\"danger\" icon=\"el-icon-delete\" @click=\"handleBatchDelete\">{{ $t('app.button.batch_delete') }}</el-button>\n    </div>\n\n    <el-tabs v-model=\"listQuery.type\" @tab-click=\"handleFilter\">\n      <el-tab-pane :label=\"$t('profile_notice.section.unread')\" name=\"unread\" />\n      <el-tab-pane :label=\"$t('profile_notice.section.read')\" name=\"read\" />\n      <el-tab-pane :label=\"$t('profile_notice.section.all')\" name=\"all\" />\n    </el-tabs>\n\n    <!-- 查询结果 -->\n    <el-table v-loading=\"listLoading\" :data=\"list\" :element-loading-text=\"$t('app.message.list_loading')\" fit highlight-current-row @selection-change=\"handleSelectionChange\">\n      <el-table-column type=\"selection\" width=\"55\" />\n\n      <el-table-column align=\"center\" :label=\"$t('profile_notice.table.notice_title')\" prop=\"noticeTitle\" />\n\n      <el-table-column align=\"center\" :label=\"$t('profile_notice.table.add_time')\" prop=\"addTime\" width=\"180\" />\n\n      <el-table-column align=\"center\" :label=\"$t('profile_notice.table.read_time')\" prop=\"readTime\" width=\"120\">\n        <template slot-scope=\"scope\">\n          <el-tag :type=\"scope.row.readTime ? 'success' : 'error' \">{{ $t(scope.row.readTime ? 'profile_notice.text.read' : 'profile_notice.text.unread') }}</el-tag>\n        </template>\n      </el-table-column>\n\n      <el-table-column align=\"center\" :label=\"$t('profile_notice.table.actions')\" width=\"200\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"primary\" size=\"mini\" @click=\"handleRead(scope.row)\">{{ $t('profile_notice.button.read') }}</el-button>\n          <el-button type=\"danger\" size=\"mini\" @click=\"handleDelete(scope.row)\">{{ $t('app.button.delete') }}</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getList\" />\n\n    <el-dialog :title=\"notice.title\" :visible.sync=\"noticeVisible\" center>\n      <el-divider content-position=\"left\">{{ $t('profile_notice.text.admin_time', { admin: notice.admin, time: notice.time }) }}</el-divider>\n      <div v-html=\"notice.content\" />\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"afterRead\">{{ $t('app.button.confirm') }}</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { listNotice, catNotice, bcatNotice, rmNotice, brmNotice } from '@/api/profile'\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\nimport _ from 'lodash'\n\nexport default {\n  name: 'AdminNotice',\n  components: { Pagination },\n  data() {\n    return {\n      list: [],\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        limit: 20,\n        title: '',\n        type: 'unread',\n        sort: 'add_time',\n        order: 'desc'\n      },\n      multipleSelection: [],\n      notice: {\n        title: '',\n        source: '',\n        content: '',\n        addTime: ''\n      },\n      noticeVisible: false\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    getList() {\n      this.listLoading = true\n      listNotice(this.listQuery)\n        .then(response => {\n          this.list = response.data.data.list\n          this.total = response.data.data.total\n          this.listLoading = false\n        })\n        .catch(() => {\n          this.list = []\n          this.total = 0\n          this.listLoading = false\n        })\n    },\n    handleFilter() {\n      this.listQuery.page = 1\n      this.getList()\n    },\n    handleDelete(row) {\n      rmNotice(row)\n        .then(response => {\n          this.$notify.success({\n            title: '成功',\n            message: '删除通知成功'\n          })\n          this.getList()\n        })\n        .catch(response => {\n          this.$notify.error({\n            title: '失败',\n            message: response.data.errmsg\n          })\n        })\n    },\n    handleSelectionChange(val) {\n      this.multipleSelection = val\n    },\n    handleBatchDelete() {\n      if (this.multipleSelection.length === 0) {\n        this.$message.error('请选择至少一条记录')\n        return\n      }\n      const ids = []\n      _.forEach(this.multipleSelection, function(item) {\n        ids.push(item.id)\n      })\n      brmNotice({ ids: ids })\n        .then(response => {\n          this.$notify.success({\n            title: '成功',\n            message: '批量删除通知成功'\n          })\n          this.getList()\n        })\n        .catch(response => {\n          this.$notify.error({\n            title: '失败',\n            message: response.data.errmsg\n          })\n        })\n    },\n    handleRead(row) {\n      catNotice(row)\n        .then(response => {\n          this.notice = response.data.data\n          this.noticeVisible = true\n        })\n    },\n    afterRead() {\n      this.noticeVisible = false\n      this.getList()\n    },\n    handleBatchRead() {\n      if (this.multipleSelection.length === 0) {\n        this.$message.error('请选择至少一条记录')\n        return\n      }\n      const ids = []\n      _.forEach(this.multipleSelection, function(item) {\n        ids.push(item.id)\n      })\n      bcatNotice({ ids: ids })\n        .then(response => {\n          this.$notify.success({\n            title: '成功',\n            message: '批量设置通知已读成功'\n          })\n          this.getList()\n        })\n        .catch(response => {\n          this.$notify.error({\n            title: '失败',\n            message: response.data.errmsg\n          })\n        })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/profile"}]}